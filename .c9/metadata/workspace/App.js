{"filter":false,"title":"App.js","tooltip":"/App.js","undoManager":{"stack":[[{"start":{"row":224,"column":0},"end":{"row":224,"column":29},"action":"remove","lines":["        return releaseFilter;"],"id":1555}],[{"start":{"row":223,"column":22},"end":{"row":224,"column":0},"action":"remove","lines":["",""],"id":1556}],[{"start":{"row":161,"column":6},"end":{"row":177,"column":29},"action":"remove","lines":[" /* Ext.Array.each(data, function(record) {","            gridRecord = {","                _ref: record.get('_ref'),","                _type: Rally.util.Ref.getTypeFromRef(record),","                ObjectID: record.get('ObjectID'),","                FormattedID: record.get('FormattedID'),","                Release: record.get('Release'),","                Name: record.get('Name'),","                Parent: record.get('Parent'),","                Grandparent: 0","            };","            if( record.get('Parent')) {","                me._setGrandparent(gridRecord);","            }","            me._GridRecords.push(gridRecord);","        });","        this._createGrid();*/"],"id":1557}],[{"start":{"row":161,"column":5},"end":{"row":161,"column":6},"action":"remove","lines":[" "],"id":1558}],[{"start":{"row":161,"column":4},"end":{"row":161,"column":5},"action":"remove","lines":[" "],"id":1559}],[{"start":{"row":161,"column":0},"end":{"row":161,"column":4},"action":"remove","lines":["    "],"id":1560}],[{"start":{"row":160,"column":8},"end":{"row":161,"column":0},"action":"remove","lines":["",""],"id":1561}],[{"start":{"row":160,"column":4},"end":{"row":160,"column":8},"action":"remove","lines":["    "],"id":1562}],[{"start":{"row":160,"column":0},"end":{"row":160,"column":4},"action":"remove","lines":["    "],"id":1563}],[{"start":{"row":159,"column":11},"end":{"row":160,"column":0},"action":"remove","lines":["",""],"id":1564}],[{"start":{"row":162,"column":0},"end":{"row":182,"column":6},"action":"remove","lines":["    _setGrandparent: function (gridRecord) {","        var parent = gridRecord.Parent;","        if ( parent ) {","            Ext.create('Rally.data.WsapiDataStore', {","                model: 'PortfolioItem/Initiative',","                autoLoad: true,","                filters: [{","                    property : 'Name',","                    operator : '=',","                    value    : parent.Name","                }],","                fetch: ['Name', 'Parent', 'FormattedID', '_ref'],","                listeners: {","                    load: function(store, data, success) {","                        this._onInitiativesLoaded(data, gridRecord);","                    },","                    scope: this","                }","            }); ","        }","    },"]}],[{"start":{"row":161,"column":4},"end":{"row":162,"column":0},"action":"remove","lines":["",""],"id":1566}],[{"start":{"row":161,"column":0},"end":{"row":161,"column":4},"action":"remove","lines":["    "],"id":1567}],[{"start":{"row":160,"column":6},"end":{"row":161,"column":0},"action":"remove","lines":["",""],"id":1568}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":54},"action":"remove","lines":["                    // this._getGrandparents(records);"],"id":1569}],[{"start":{"row":60,"column":51},"end":{"row":61,"column":0},"action":"remove","lines":["",""],"id":1570}],[{"start":{"row":63,"column":37},"end":{"row":63,"column":38},"action":"insert","lines":[" "],"id":1571}],[{"start":{"row":63,"column":38},"end":{"row":63,"column":39},"action":"insert","lines":["/"],"id":1572}],[{"start":{"row":63,"column":39},"end":{"row":63,"column":40},"action":"insert","lines":["/"],"id":1573}],[{"start":{"row":63,"column":40},"end":{"row":63,"column":41},"action":"insert","lines":[" "],"id":1574}],[{"start":{"row":63,"column":41},"end":{"row":63,"column":42},"action":"insert","lines":["d"],"id":1575}],[{"start":{"row":63,"column":42},"end":{"row":63,"column":43},"action":"insert","lines":["a"],"id":1576}],[{"start":{"row":63,"column":43},"end":{"row":63,"column":44},"action":"insert","lines":["t"],"id":1577}],[{"start":{"row":63,"column":44},"end":{"row":63,"column":45},"action":"insert","lines":["a"],"id":1578}],[{"start":{"row":63,"column":45},"end":{"row":63,"column":46},"action":"insert","lines":[" "],"id":1579}],[{"start":{"row":63,"column":46},"end":{"row":63,"column":47},"action":"insert","lines":["w"],"id":1580}],[{"start":{"row":63,"column":47},"end":{"row":63,"column":48},"action":"insert","lines":["i"],"id":1581}],[{"start":{"row":63,"column":48},"end":{"row":63,"column":49},"action":"insert","lines":["l"],"id":1582}],[{"start":{"row":63,"column":49},"end":{"row":63,"column":50},"action":"insert","lines":["l"],"id":1583}],[{"start":{"row":63,"column":50},"end":{"row":63,"column":51},"action":"insert","lines":[" "],"id":1584}],[{"start":{"row":63,"column":51},"end":{"row":63,"column":52},"action":"insert","lines":["u"],"id":1585}],[{"start":{"row":63,"column":52},"end":{"row":63,"column":53},"action":"insert","lines":["p"],"id":1586}],[{"start":{"row":63,"column":53},"end":{"row":63,"column":54},"action":"insert","lines":["d"],"id":1587}],[{"start":{"row":63,"column":54},"end":{"row":63,"column":55},"action":"insert","lines":["a"],"id":1588}],[{"start":{"row":63,"column":55},"end":{"row":63,"column":56},"action":"insert","lines":["t"],"id":1589}],[{"start":{"row":63,"column":56},"end":{"row":63,"column":57},"action":"insert","lines":["e"],"id":1590}],[{"start":{"row":63,"column":57},"end":{"row":63,"column":58},"action":"insert","lines":[" "],"id":1591}],[{"start":{"row":63,"column":58},"end":{"row":63,"column":59},"action":"insert","lines":["a"],"id":1592}],[{"start":{"row":63,"column":59},"end":{"row":63,"column":60},"action":"insert","lines":["f"],"id":1593}],[{"start":{"row":63,"column":60},"end":{"row":63,"column":61},"action":"insert","lines":["t"],"id":1594}],[{"start":{"row":63,"column":61},"end":{"row":63,"column":62},"action":"insert","lines":["e"],"id":1595}],[{"start":{"row":63,"column":62},"end":{"row":63,"column":63},"action":"insert","lines":["r"],"id":1596}],[{"start":{"row":63,"column":63},"end":{"row":63,"column":64},"action":"insert","lines":[" "],"id":1597}],[{"start":{"row":63,"column":64},"end":{"row":63,"column":65},"action":"insert","lines":["g"],"id":1598}],[{"start":{"row":63,"column":65},"end":{"row":63,"column":66},"action":"insert","lines":["r"],"id":1599}],[{"start":{"row":63,"column":66},"end":{"row":63,"column":67},"action":"insert","lines":["i"],"id":1600}],[{"start":{"row":63,"column":67},"end":{"row":63,"column":68},"action":"insert","lines":["d"],"id":1601}],[{"start":{"row":63,"column":68},"end":{"row":63,"column":69},"action":"insert","lines":[" "],"id":1602}],[{"start":{"row":63,"column":69},"end":{"row":63,"column":70},"action":"insert","lines":["d"],"id":1603}],[{"start":{"row":63,"column":70},"end":{"row":63,"column":71},"action":"insert","lines":["r"],"id":1604}],[{"start":{"row":63,"column":71},"end":{"row":63,"column":72},"action":"insert","lines":["a"],"id":1605}],[{"start":{"row":63,"column":72},"end":{"row":63,"column":73},"action":"insert","lines":["w"],"id":1606}],[{"start":{"row":63,"column":73},"end":{"row":63,"column":74},"action":"insert","lines":["s"],"id":1607}],[{"start":{"row":106,"column":57},"end":{"row":106,"column":58},"action":"insert","lines":[";"],"id":1608}],[{"start":{"row":107,"column":18},"end":{"row":107,"column":19},"action":"insert","lines":[";"],"id":1609}],[{"start":{"row":109,"column":9},"end":{"row":109,"column":10},"action":"insert","lines":[";"],"id":1610}],[{"start":{"row":74,"column":46},"end":{"row":75,"column":0},"action":"remove","lines":["",""],"id":1611}],[{"start":{"row":0,"column":0},"end":{"row":253,"column":3},"action":"remove","lines":["var Ext = window.Ext4 || window.Ext;","var app = null;","","Ext.define('CustomApp', {","    extend: 'Rally.app.App',","    uses: [","        'Ext.ux.exporter.Exporter'","    ],","    componentCls: 'app',","","    launch: function() {","        this._GridRecords = [];","        this._boxcontainer = Ext.create('Ext.form.Panel', {","            layout: { type: 'hbox'},","            width: '95%',","            bodyPadding: 10","        });","        this._loadReleases();","    },","    ","    _loadReleases: function() {","        app = this;","        this._releaseCombobox = this.add({","                xtype: 'rallyreleasecombobox',","                listeners: {","                    ready: this._loadFeatures,","                    change: this._onReleaseComboboxChanged,","                    scope: this","                }","            });","            ","        this._myButton = this.add({","            xtype : 'rallybutton',","            height : 20,","            text : 'Export to CSV',","            listeners : {","                scope :this,","                click : function() {","                    var exporter = Ext.create(\"GridExporter\",{});","                    exporter.exportGrid(app._myGrid);","                }","            }","        });","        ","        this._boxcontainer.add(this._releaseCombobox);","        this._boxcontainer.add(this._myButton);","        this.add(this._boxcontainer);","    },","","    _loadFeatures: function() {","        var me = this;","        console.log(this._getFilter().toString());","        this._myStore = Ext.create(\"Rally.data.WsapiDataStore\", {","            model: 'PortfolioItem/Feature',","            autoLoad: true,","            filters: this._getFilter(),","            context: this.getContext().getDataContext(),","            remoteSort: false,","            listeners: {","                load: function(store, records, success) {","                    console.log(\"records\",records);","                    // barry starts here","                    me._GridRecords = records;","                    me._createGrid(); // data will update after grid draws","                    this.__getGrandParents(records);","                    // barry ends here","                },","                scope: this","            },","            fetch: [\"Name\", \"FormattedID\", \"CustomField1\", 'Release', ","                \"Parent\"]","        });","    },","","    __getGrandParents : function( features ) {","        async.map( features, ","","            function(feature, callback) {","                if ( feature.get('Parent')) {","                    Ext.create('Rally.data.WsapiDataStore', {","                        model: 'PortfolioItem/Initiative',","                        autoLoad: true,","                        filters: [{","                            property : 'FormattedID',","                            operator : '=',","                            value    : feature.get('Parent')[\"FormattedID\"]","                        }],","                        fetch: ['Name', 'Parent', 'FormattedID', '_ref','ObjectID'],","                        listeners: {","                            load: function(store, data, success) {","                                // me._onInitiativesLoaded(data, gridRecord);","                                console.log(_.first(data).get(\"Parent\"));","","                                callback(null,_.first(data).get(\"Parent\"));","                            },","                            scope: this","                        }","                    }); ","                } else {","                    callback(null,null);","                }","            },","            function(err,results){","                console.log(\"grandparent results\",results);","                _.each(features,function(feature,i) {","                    feature.set(\"Grandparent\",results[i]);","                });","            }","        );","","    },","","    _getGrandparents: function(data) {","        var me = this;","        var gridRecord = [];","        async.forEach(data, function(record, callback) {","        console.log('Processing record ' + record);","        gridRecord = {","                _ref: record.get('_ref'),","                _type: Rally.util.Ref.getTypeFromRef(record),","                ObjectID: record.get('ObjectID'),","                FormattedID: record.get('FormattedID'),","                Release: record.get('Release'),","                Name: record.get('Name'),","                Parent: record.get('Parent'),","                Grandparent: 0","            };","            if( record.get('Parent')) {","                Ext.create('Rally.data.WsapiDataStore', {","                    model: 'PortfolioItem/Initiative',","                    autoLoad: true,","                    filters: [{","                        property : 'Name',","                        operator : '=',","                        value    : parent.Name","                    }],","                    fetch: ['Name', 'Parent', 'FormattedID', '_ref'],","                    listeners: {","                        load: function(store, data, success) {","                            me._onInitiativesLoaded(data, gridRecord);","                        },","                        scope: this","                    }","                }); ","            }","            me._GridRecords.push(gridRecord);","        callback();","        }, function(err){","            // if any of the processing produced an error, err would equal that error","            if( err ) {","              // One of the iterations produced an error.","              // All processing will now stop.","              console.log('A record failed to process');","            } else {","              console.log('All records have been processed successfully', me._GridRecords);","              me._createGrid();","            }","        });","    },","    ","    _onInitiativesLoaded: function(resultsData, currentRec) {","        var gp;","        Ext.Array.each(resultsData, function(record) {","            gp = record.get('Parent');","        });","        ","        if ( gp ) {","            currentRec.Grandparent = gp;","        }","    },","    ","    _getFilter: function() {","        var combo = this.down('rallyreleasecombobox');","        var execFilter = Ext.create('Rally.data.wsapi.Filter', {","            property: 'CustomField1',","            operator: '=',","            value: 'Exec'","        });","        ","        var releaseFilter = combo.getQueryFromSelected();","        var filter = releaseFilter.and(execFilter);","        return filter;","    },","    ","    _onReleaseComboboxChanged: function() {","        if (this._myGrid) {","            var store = this._myGrid.getStore();","            store.clearFilter(!0);","            this._myGrid.destroy();","            this._GridRecords = [];","            this._loadFeatures();","        }","        else {","            console.log(\"grid not created yet\");","        }","    },","    ","    renderName : function(value,meta,rec,row,col) {","        return value ? value.Name : value;","    },","    renderID : function(value, meta, rec, row, col) {","        return value ? value.FormattedID : value;","    },","","    _createGrid: function() {","        console.log(\"grid records\",this._GridRecords);","        this._myGrid = this.add({","            xtype: 'rallygrid',","            columnCfgs: [","                {","                    xtype: 'templatecolumn',","                    text: 'ID',","                    dataIndex: 'FormattedID',","                    tpl: Ext.create('Rally.ui.renderer.template.FormattedIDTemplate')","                },","                {","                    text: 'Name',","                    dataIndex: 'Name',","                    flex: 2","                },","                {","                    text: 'Release',","                    dataIndex: 'Release',","                    renderer: this.renderName,","                    flex: 1","                },","                {","                    xtype: 'templatecolumn',","                    text: 'Parent',","                    dataIndex: 'Parent',","                    tpl: Ext.create('Rally.ui.renderer.template.ParentTemplate'),","                    flex: 2","                        ","                },","                {","                    xtype: 'templatecolumn',","                    text: 'Grandparent',","                    dataIndex: 'Grandparent',","                    tpl: Ext.create('Rally.ui.renderer.template.ChildObjectFormattedIDTemplate', {","                        showName: true,","                        childObjectProperty: 'Grandparent'","                    }),","                    flex: 2","                }","            ],","            context: this.getContext(),","            store: Ext.create('Rally.data.custom.Store', {","             data: this._GridRecords,","             model: 'PortfolioItem/Feature',","             height: '98%'","            })","        });","    }","});"]}],[{"start":{"row":0,"column":0},"end":{"row":301,"column":3},"action":"insert","lines":["var Ext = window.Ext4 || window.Ext;","var app = null;","","Ext.define('CustomApp', {","    extend: 'Rally.app.App',","    uses: [","        'Ext.ux.exporter.Exporter'","    ],","    componentCls: 'app',","","    launch: function() {","        this._GridRecords = [];","        this._boxcontainer = Ext.create('Ext.form.Panel', {","            layout: { type: 'hbox'},","            width: '95%',","            bodyPadding: 10","        });","        this._loadReleases();","    },","    ","    _loadReleases: function() {","        app = this;","        this._releaseCombobox = this.add({","                xtype: 'rallyreleasecombobox',","                listeners: {","                    ready: this._loadFeatures,","                    change: this._onReleaseComboboxChanged,","                    scope: this","                }","            });","            ","        this._myButton = this.add({","            xtype : 'rallybutton',","            height : 20,","            text : 'Export to CSV',","            listeners : {","                scope :this,","                click : function() {","                    var exporter = Ext.create(\"GridExporter\",{});","                    exporter.exportGrid(app._myGrid);","                }","            }","        });","        ","        this._boxcontainer.add(this._releaseCombobox);","        this._boxcontainer.add(this._myButton);","        this.add(this._boxcontainer);","    },","","    _loadFeatures: function() {","        var me = this;","        console.log(this._getFilter().toString());","        this._myStore = Ext.create(\"Rally.data.WsapiDataStore\", {","            model: 'PortfolioItem/Feature',","            autoLoad: true,","            filters: this._getFilter(),","            context: this.getContext().getDataContext(),","            remoteSort: false,","            listeners: {","                load: function(store, records, success) {","                    console.log(\"records\",records);","                    // this._getGrandparents(records);","                    // barry starts here","                    me._GridRecords = records;","                    me._createGrid();","                    this.__getGrandParents(records);","                    // barry ends here","                },","                scope: this","            },","            fetch: [\"Name\", \"FormattedID\", \"CustomField1\", 'Release', ","                \"Parent\"]","        });","    },","","    __getGrandParents : function( features ) {","","        async.map( features, ","","            function(feature, callback) {","                if ( feature.get('Parent')) {","                    Ext.create('Rally.data.WsapiDataStore', {","                        model: 'PortfolioItem/Initiative',","                        autoLoad: true,","                        filters: [{","                            property : 'FormattedID',","                            operator : '=',","                            value    : feature.get('Parent')[\"FormattedID\"]","                        }],","                        fetch: ['Name', 'Parent', 'FormattedID', '_ref','ObjectID'],","                        listeners: {","                            load: function(store, data, success) {","                                // me._onInitiativesLoaded(data, gridRecord);","                                console.log(_.first(data).get(\"Parent\"));","","                                callback(null,_.first(data).get(\"Parent\"));","                            },","                            scope: this","                        }","                    }); ","                } else {","                    callback(null,null);","                }","            },","            function(err,results){","                console.log(\"grandparent results\",results);","                _.each(features,function(feature,i) {","                    feature.set(\"Grandparent\",results[i])","                })","            }","        )","","    },","","    _getGrandparents: function(data) {","        var me = this;","        var gridRecord = [];","        async.forEach(data, function(record, callback) {","        console.log('Processing record ' + record);","        gridRecord = {","                _ref: record.get('_ref'),","                _type: Rally.util.Ref.getTypeFromRef(record),","                ObjectID: record.get('ObjectID'),","                FormattedID: record.get('FormattedID'),","                Release: record.get('Release'),","                Name: record.get('Name'),","                Parent: record.get('Parent'),","                Grandparent: 0","            };","            if( record.get('Parent')) {","                Ext.create('Rally.data.WsapiDataStore', {","                    model: 'PortfolioItem/Initiative',","                    autoLoad: true,","                    filters: [{","                        property : 'Name',","                        operator : '=',","                        value    : parent.Name","                    }],","                    fetch: ['Name', 'Parent', 'FormattedID', '_ref'],","                    listeners: {","                        load: function(store, data, success) {","                            me._onInitiativesLoaded(data, gridRecord);","                        },","                        scope: this","                    }","                }); ","            }","            me._GridRecords.push(gridRecord);","        callback();","        }, function(err){","            // if any of the processing produced an error, err would equal that error","            if( err ) {","              // One of the iterations produced an error.","              // All processing will now stop.","              console.log('A record failed to process');","            } else {","              console.log('All records have been processed successfully', me._GridRecords);","              me._createGrid();","            }","        });","        ","       /* Ext.Array.each(data, function(record) {","            gridRecord = {","                _ref: record.get('_ref'),","                _type: Rally.util.Ref.getTypeFromRef(record),","                ObjectID: record.get('ObjectID'),","                FormattedID: record.get('FormattedID'),","                Release: record.get('Release'),","                Name: record.get('Name'),","                Parent: record.get('Parent'),","                Grandparent: 0","            };","            if( record.get('Parent')) {","                me._setGrandparent(gridRecord);","            }","            me._GridRecords.push(gridRecord);","        });","        this._createGrid();*/","    },","    ","    _setGrandparent: function (gridRecord) {","        var parent = gridRecord.Parent;","        if ( parent ) {","            Ext.create('Rally.data.WsapiDataStore', {","                model: 'PortfolioItem/Initiative',","                autoLoad: true,","                filters: [{","                    property : 'Name',","                    operator : '=',","                    value    : parent.Name","                }],","                fetch: ['Name', 'Parent', 'FormattedID', '_ref'],","                listeners: {","                    load: function(store, data, success) {","                        this._onInitiativesLoaded(data, gridRecord);","                    },","                    scope: this","                }","            }); ","        }","    },","    ","    _onInitiativesLoaded: function(resultsData, currentRec) {","        var gp;","        Ext.Array.each(resultsData, function(record) {","            gp = record.get('Parent');","        });","        ","        if ( gp ) {","            currentRec.Grandparent = gp;","        }","    },","    ","    _getFilter: function() {","        var combo = this.down('rallyreleasecombobox');","        var execFilter = Ext.create('Rally.data.wsapi.Filter', {","            property: 'CustomField1',","            operator: '=',","            value: 'Exec'","        });","        ","        var releaseFilter = combo.getQueryFromSelected();","        var filter = releaseFilter.and(execFilter);","        // return filter;","        return releaseFilter;","    },","    ","    _onReleaseComboboxChanged: function() {","        if (this._myGrid) {","            var store = this._myGrid.getStore();","            store.clearFilter(!0);","            this._myGrid.destroy();","            this._GridRecords = [];","            this._loadFeatures();","        }","        else {","            console.log(\"grid not created yet\");","        }","    },","    ","    renderName : function(value,meta,rec,row,col) {","        return value ? value.Name : value;","    },","    renderID : function(value, meta, rec, row, col) {","        return value ? value.FormattedID : value;","    },","    ","    renderParent: function(value, meta, rec, row, col ) {","        return value.name;","    }, ","    ","    _createGrid: function() {","        console.log(\"grid records\",this._GridRecords);","        this._myGrid = this.add({","            xtype: 'rallygrid',","            columnCfgs: [","                {","                    xtype: 'templatecolumn',","                    text: 'ID',","                    dataIndex: 'FormattedID',","                    tpl: Ext.create('Rally.ui.renderer.template.FormattedIDTemplate')","                },","                {","                    text: 'Name',","                    dataIndex: 'Name',","                    flex: 2","                },","                {","                    text: 'Release',","                    dataIndex: 'Release',","                    renderer: this.renderName,","                    flex: 1","                },","                {","                    xtype: 'templatecolumn',","                    text: 'Parent',","                    dataIndex: 'Parent',","                    tpl: Ext.create('Rally.ui.renderer.template.ParentTemplate'),","                    flex: 2","                        ","                },","                {","                    xtype: 'templatecolumn',","                    text: 'Grandparent',","                    dataIndex: 'Grandparent',","                    // tpl: Ext.create('Rally.ui.renderer.template.FormattedIDTemplate'),","                    tpl: Ext.create('Rally.ui.renderer.template.ChildObjectFormattedIDTemplate', {","                        showName: true,","                        childObjectProperty: 'Grandparent'","                    }),","                    flex: 2","                }","            ],","            context: this.getContext(),","            store: Ext.create('Rally.data.custom.Store', {","             data: this._GridRecords,","             model: 'PortfolioItem/Feature',","             height: '98%'","            })","        });","    }","});"],"id":1613}],[{"start":{"row":224,"column":0},"end":{"row":224,"column":29},"action":"remove","lines":["        return releaseFilter;"],"id":1614}],[{"start":{"row":223,"column":10},"end":{"row":223,"column":11},"action":"remove","lines":[" "],"id":1615}],[{"start":{"row":223,"column":9},"end":{"row":223,"column":10},"action":"remove","lines":["/"],"id":1616}],[{"start":{"row":223,"column":8},"end":{"row":223,"column":9},"action":"remove","lines":["/"],"id":1617}],[{"start":{"row":92,"column":0},"end":{"row":92,"column":77},"action":"remove","lines":["                                // me._onInitiativesLoaded(data, gridRecord);"],"id":1618}],[{"start":{"row":91,"column":66},"end":{"row":92,"column":0},"action":"remove","lines":["",""],"id":1619}],[{"start":{"row":92,"column":73},"end":{"row":93,"column":0},"action":"remove","lines":["",""],"id":1620}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":54},"action":"remove","lines":["                    // this._getGrandparents(records);"],"id":1621}],[{"start":{"row":60,"column":51},"end":{"row":61,"column":0},"action":"remove","lines":["",""],"id":1622}],[{"start":{"row":70,"column":0},"end":{"row":70,"column":16},"action":"remove","lines":["                "],"id":1623}],[{"start":{"row":69,"column":70},"end":{"row":70,"column":0},"action":"remove","lines":["",""],"id":1624}],[{"start":{"row":156,"column":0},"end":{"row":173,"column":29},"action":"remove","lines":["        ","       /* Ext.Array.each(data, function(record) {","            gridRecord = {","                _ref: record.get('_ref'),","                _type: Rally.util.Ref.getTypeFromRef(record),","                ObjectID: record.get('ObjectID'),","                FormattedID: record.get('FormattedID'),","                Release: record.get('Release'),","                Name: record.get('Name'),","                Parent: record.get('Parent'),","                Grandparent: 0","            };","            if( record.get('Parent')) {","                me._setGrandparent(gridRecord);","            }","            me._GridRecords.push(gridRecord);","        });","        this._createGrid();*/"],"id":1625}],[{"start":{"row":155,"column":11},"end":{"row":156,"column":0},"action":"remove","lines":["",""],"id":1626}],[{"start":{"row":157,"column":0},"end":{"row":178,"column":6},"action":"remove","lines":["    ","    _setGrandparent: function (gridRecord) {","        var parent = gridRecord.Parent;","        if ( parent ) {","            Ext.create('Rally.data.WsapiDataStore', {","                model: 'PortfolioItem/Initiative',","                autoLoad: true,","                filters: [{","                    property : 'Name',","                    operator : '=',","                    value    : parent.Name","                }],","                fetch: ['Name', 'Parent', 'FormattedID', '_ref'],","                listeners: {","                    load: function(store, data, success) {","                        this._onInitiativesLoaded(data, gridRecord);","                    },","                    scope: this","                }","            }); ","        }","    },"]}],[{"start":{"row":156,"column":6},"end":{"row":157,"column":0},"action":"remove","lines":["",""],"id":1628}],[{"start":{"row":109,"column":0},"end":{"row":156,"column":6},"action":"remove","lines":["","    _getGrandparents: function(data) {","        var me = this;","        var gridRecord = [];","        async.forEach(data, function(record, callback) {","        console.log('Processing record ' + record);","        gridRecord = {","                _ref: record.get('_ref'),","                _type: Rally.util.Ref.getTypeFromRef(record),","                ObjectID: record.get('ObjectID'),","                FormattedID: record.get('FormattedID'),","                Release: record.get('Release'),","                Name: record.get('Name'),","                Parent: record.get('Parent'),","                Grandparent: 0","            };","            if( record.get('Parent')) {","                Ext.create('Rally.data.WsapiDataStore', {","                    model: 'PortfolioItem/Initiative',","                    autoLoad: true,","                    filters: [{","                        property : 'Name',","                        operator : '=',","                        value    : parent.Name","                    }],","                    fetch: ['Name', 'Parent', 'FormattedID', '_ref'],","                    listeners: {","                        load: function(store, data, success) {","                            me._onInitiativesLoaded(data, gridRecord);","                        },","                        scope: this","                    }","                }); ","            }","            me._GridRecords.push(gridRecord);","        callback();","        }, function(err){","            // if any of the processing produced an error, err would equal that error","            if( err ) {","              // One of the iterations produced an error.","              // All processing will now stop.","              console.log('A record failed to process');","            } else {","              console.log('All records have been processed successfully', me._GridRecords);","              me._createGrid();","            }","        });","    },"]}],[{"start":{"row":108,"column":6},"end":{"row":109,"column":0},"action":"remove","lines":["",""],"id":1630}],[{"start":{"row":108,"column":6},"end":{"row":109,"column":4},"action":"remove","lines":["","    "],"id":1631}],[{"start":{"row":108,"column":6},"end":{"row":109,"column":0},"action":"insert","lines":["",""],"id":1632},{"start":{"row":109,"column":0},"end":{"row":109,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":64,"column":25},"end":{"row":64,"column":26},"action":"remove","lines":["_"],"id":1633}],[{"start":{"row":73,"column":4},"end":{"row":73,"column":5},"action":"remove","lines":["_"],"id":1634}],[{"start":{"row":103,"column":57},"end":{"row":103,"column":58},"action":"insert","lines":[";"],"id":1635}],[{"start":{"row":104,"column":18},"end":{"row":104,"column":19},"action":"insert","lines":[";"],"id":1636}],[{"start":{"row":106,"column":9},"end":{"row":106,"column":10},"action":"insert","lines":[";"],"id":1637}],[{"start":{"row":154,"column":0},"end":{"row":157,"column":7},"action":"remove","lines":["    ","    renderParent: function(value, meta, rec, row, col ) {","        return value.name;","    }, "]}],[{"start":{"row":154,"column":0},"end":{"row":155,"column":4},"action":"remove","lines":["","    "],"id":1639}],[{"start":{"row":131,"column":22},"end":{"row":132,"column":0},"action":"remove","lines":["",""],"id":1640}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":40},"action":"remove","lines":["                    // barry starts here"],"id":1641}],[{"start":{"row":60,"column":51},"end":{"row":61,"column":0},"action":"remove","lines":["",""],"id":1642}],[{"start":{"row":64,"column":0},"end":{"row":64,"column":38},"action":"remove","lines":["                    // barry ends here"],"id":1643}],[{"start":{"row":63,"column":51},"end":{"row":64,"column":0},"action":"remove","lines":["",""],"id":1644}],[{"start":{"row":51,"column":0},"end":{"row":51,"column":50},"action":"remove","lines":["        console.log(this._getFilter().toString());"],"id":1645}],[{"start":{"row":50,"column":22},"end":{"row":51,"column":0},"action":"remove","lines":["",""],"id":1646}],[{"start":{"row":59,"column":0},"end":{"row":59,"column":51},"action":"remove","lines":["                    console.log(\"records\",records);"],"id":1647}],[{"start":{"row":58,"column":57},"end":{"row":59,"column":0},"action":"remove","lines":["",""],"id":1648}],[{"start":{"row":97,"column":16},"end":{"row":97,"column":17},"action":"insert","lines":["/"],"id":1649}],[{"start":{"row":97,"column":17},"end":{"row":97,"column":18},"action":"insert","lines":["/"],"id":1650}],[{"start":{"row":137,"column":9},"end":{"row":140,"column":9},"action":"remove","lines":["","        else {","            console.log(\"grid not created yet\");","        }"],"id":1651}],[{"start":{"row":148,"column":8},"end":{"row":148,"column":9},"action":"insert","lines":["/"],"id":1652}],[{"start":{"row":148,"column":9},"end":{"row":148,"column":10},"action":"insert","lines":["/"],"id":1653}],[{"start":{"row":86,"column":32},"end":{"row":86,"column":33},"action":"insert","lines":["/"],"id":1654}],[{"start":{"row":86,"column":33},"end":{"row":86,"column":34},"action":"insert","lines":["/"],"id":1655}]],"mark":100,"position":100},"ace":{"folds":[{"start":{"row":10,"column":24},"end":{"row":18,"column":4},"placeholder":"..."},{"start":{"row":20,"column":31},"end":{"row":47,"column":4},"placeholder":"..."},{"start":{"row":106,"column":61},"end":{"row":115,"column":4},"placeholder":"..."},{"start":{"row":117,"column":28},"end":{"row":128,"column":4},"placeholder":"..."},{"start":{"row":140,"column":51},"end":{"row":142,"column":4},"placeholder":"..."},{"start":{"row":143,"column":53},"end":{"row":145,"column":4},"placeholder":"..."}],"scrolltop":834,"scrollleft":0,"selection":{"start":{"row":86,"column":34},"end":{"row":86,"column":45},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"guessTabSize":false,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":71,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1431116894764,"hash":"48203ada54ef8756e0584b796110f8a87dbc1c59"}